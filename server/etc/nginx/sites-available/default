# Redirect all HTTP requests for the main domain to HTTPS
server {
    listen 80;
    server_name ethernodesmap.org;

    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}

# Main domain HTTPS configuration
server {
    listen 443 ssl;
    server_name ethernodesmap.org;

    # SSL Certificate Configuration
    ssl_certificate /etc/letsencrypt/live/ethernodesmap.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ethernodesmap.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/html/web;
    index index.html;

    # Serve the main application
    location / {
        try_files $uri $uri/ =404;
    }

    # HTML files location
    location /en {
        alias /var/www/html/web/en;
        try_files $uri $uri/ =404;
    }

    # Static CSS and JS assets
    location /css {
        alias /var/www/html/web/css;
        try_files $uri $uri/ =404;
    }

    location /js {
        alias /var/www/html/web/js;
        try_files $uri $uri/ =404;
    }

    # Packages (leaflet, d3, etc.)
    location /pkg {
        alias /var/www/html/web/pkg;
        try_files $uri $uri/ =404;
    }

    # Robots.txt and sitemap.xml
    location /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location /sitemap.xml {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Error handling
    error_page 403 /error.html;
    location = /error.html {
        root /var/www/html/web;
        internal;
    }

    # Caching for static files
    location ~* \.(css|js|png|jpg|jpeg|gif|ico)$ {
        expires 15m;
        add_header Cache-Control "public";
    }
}

# Redirect all HTTP requests for the API subdomain to HTTPS
server {
    listen 80;
    server_name api.ethernodesmap.org;

    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}

# API subdomain HTTPS configuration
server {
    listen 443 ssl;
    server_name api.ethernodesmap.org;

    # SSL Certificate Configuration
    ssl_certificate /etc/letsencrypt/live/ethernodesmap.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ethernodesmap.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/html; # API subdomain root directory
    index index.html;

    # Serve the API application
    location / {
        try_files $uri $uri/ =404;
    }

    # Caching for static files
    location ~* \.(css|js|png|jpg|jpeg|gif|ico)$ {
        expires 1y;
        add_header Cache-Control "public";
    }

    # API Endpoint Proxying
    location /nodes {
        proxy_pass http://127.0.0.1:5001/nodes;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/operating-systems {
        proxy_pass http://127.0.0.1:5001/nodes/operating-systems;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/clients {
        proxy_pass http://127.0.0.1:5001/nodes/clients;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/countries {
        proxy_pass http://127.0.0.1:5001/nodes/countries;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/isps {
        proxy_pass http://127.0.0.1:5001/nodes/isps;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/ids {
        proxy_pass http://127.0.0.1:5001/nodes/ids;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/details/ {
        proxy_pass http://127.0.0.1:5001/nodes/details/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/relationships/ {
        proxy_pass http://127.0.0.1:5001/nodes/relationships/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/count {
        proxy_pass http://127.0.0.1:5001/nodes/count;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/latest {
        proxy_pass http://127.0.0.1:5001/nodes/latest;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nodes/filter {
        proxy_pass http://127.0.0.1:5001/nodes/filter;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /statistics/ {
        proxy_pass http://127.0.0.1:5001/statistics/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
